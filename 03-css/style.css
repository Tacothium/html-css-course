* {
  margin: 0;
  padding: 0;
}

/* PAGE SECTIONS */

body {
  color: #444;
  font-family: sans-serif;

  border-top: 10px solid #1098ad;
  position: relative;
}

.container {
  width: 800px;
  margin: 0 auto;
}

.main-header {
  background-color: #f7f7f7;
  padding: 20px 40px;
  margin-bottom: 60px;
  /* height: 80px; */
}

nav {
  font-size: 18px;
  text-align: center;
}

article {
  margin-bottom: 60px;
}
.post-img {
  width: 100%;
  height: auto;
}

.post-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 50px 0;
  width: 500px;
}

/* SMALLER ELEMENTS */

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
  position: relative;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}
p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
}

li:last-child {
  margin-bottom: 0;
}

/* We can use the # to reference id names */

/* footer p {
  font-size: 16px;
} */

#copyright {
  font-size: 16px;
}

/* article header p {
  font-style: italic;
} */

#author {
  font-style: italic;
  font-size: 18px;
}

.related {
  list-style: none;
}

/* The . is used to reference classes
    In the html doc we grouped the author <p> sections together */
.related-author {
  font-size: 18px;
  font-weight: bold;
}

/* You can use something called pseudo-classes to have CSS automatically 
   determine some things on it's own, like how it found the "first-child" of the li
   property instead of us having to put them in their own class */

/* .first-li {
  font-weight: bold
} */

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

/* li:nth-child(even) {
   color: red; 
} */

/* Misconception: this won't work! 
   What really happens is it looks, in article, for any instance where <p> is the
   first child, which actually happens in the <div> container.*/
/* article p:first-child {
  color: red; 
}*/

/* Styling links: use "link" to target anchor element with links
   since anchor tag doesn't always have href attribute */
a:link {
  color: red;
  text-decoration: none; /* removes underline */
}

/* for after link has been used */
a:visited {
  color: #1098ad;
}

/* for when link is hovered over */
a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orangered;
}

/* for when link is clicked */
a:active {
  background-color: black;
  font-style: italic;
}

/* Always style links in this order ^ (LVHA) */

nav a:link {
  margin-right: 30px;
  margin-top: 10px;
  display: inline-block;
  /* background-color: orangered;
  padding: 20px;
  margin: 20px;
  display: block; */
}

nav a:link:last-child {
  margin-right: 0;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;
  position: absolute;
  /* top: 50px;
  left: 50px; */
  bottom: 50px;
  right: 50px;
}

h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

/* would change the first line of a paragraph element red,
   but only for paragraph elements that are an adjacent sibling to an h3 element*/
h3 + p::first-line {
  color: red;
}

/* h2 {
  background-color: orange;
} */

h2::after {
  content: "TOP";
  color: #444;
  background-color: #ffe70e;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}
